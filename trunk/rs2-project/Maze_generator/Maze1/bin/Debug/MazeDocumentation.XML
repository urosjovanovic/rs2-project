<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Maze1</name>
    </assembly>
    <members>
        <member name="T:Maze1.GridGraph">
            <summary>
            A class representing a grid graph
            </summary>
        </member>
        <member name="M:Maze1.GridGraph.#ctor(System.Int32,System.Int32)">
            <summary> A public constructor for a GridGraph</summary>
            <param name="m"> Number of rows in a grid </param>
            <param name="n"> Number of columns in a grid </param>
        </member>
        <member name="M:Maze1.GridGraph.adjacentToNode(System.Int32,System.Int32)">
            <summary> Returns nodes adjacent to the node at position i,j </summary>
             <returns> A list of adjacent nodes</returns>
        </member>
        <member name="M:Maze1.GridGraph.getNodeEdges(Maze1.GridNode)">
            <summary> get edges of a node in a graph with given indexes </summary>
            <returns> A list of nodes that the given node is connected to </returns>
        </member>
        <member name="M:Maze1.GridGraph.createWallMatrix">
            <summary> Creates an integer matrix from a GridGraph </summary>
            <returns> An integer matrix where 1 represents a wall and 0 represents a room or a passage </returns>
        </member>
        <member name="M:Maze1.GridGraph.PrimsAlgorithm">
            <summary> Prims algorithm for maze generation </summary>
             <returns> A GridGraph where nodes represent rooms and edges represent walls in a maze </returns>
        </member>
        <member name="P:Maze1.GridGraph.Item(System.Int32,System.Int32)">
            <summary> Indexer that takes node indexes as arguments </summary>
             <returns> A grid node at position (i, j) </returns>
        </member>
        <member name="P:Maze1.GridGraph.Item(Maze1.GridNode)">
            <summary> Indexer that takes a key node as an argument </summary>
            <returns> A node with equal indexes as the key node ( they may have different edges ) </returns>
        </member>
        <member name="T:Maze1.GridGraph.Wall">
            <summary> A class that represents a Wall in Prims algorithm </summary>
        </member>
        <member name="T:Maze1.GridNode">
            <summary>
            A class representing a node inside a grid graph
            </summary>
        </member>
        <member name="M:Maze1.GridNode.#ctor(System.Int32,System.Int32)">
            <summary> A public constructor for a grid node at index (i,j) </summary>
        </member>
        <member name="M:Maze1.GridNode.isConnectedTo(Maze1.GridNode)">
            <summary> Check if this node is connected to the specified node </summary>
        </member>
        <member name="M:Maze1.GridNode.removeEdge(Maze1.GridNode)">
            <summary> Remove an edge between this node and the specified node </summary>
        </member>
        <member name="M:Maze1.GridNode.Equals(System.Object)">
            <summary> Equals method. I wrote this so IList.Remove would work. </summary>
        </member>
        <member name="T:Maze1.Maze">
            <summary>
            A class representing a maze
            </summary>
        </member>
        <member name="M:Maze1.Maze.#ctor(System.Int32,System.Int32)">
            <summary>
            A public constructor for the maze class 
            </summary>
            <param name="rows"> Number of rows in a maze matrix </param>
            <param name="cols"> Number of columns in a maze matrix </param>
        </member>
        <member name="M:Maze1.Maze.printToFile(System.String)">
            <summary> Writes a maze matrix to a file with a given path  </summary>
            <param name="filePath"> A path to a file.</param>
        </member>
        <member name="M:Maze1.Program.testMazeGenerationSpeed(System.Int32,System.Int32)">
            <summary>
            Tests the generation speed of a maze with given dimensions
            </summary>
            <param name="rows"> Number of rows in a maze matrix</param>
            <param name="cols"> Number of columns in a maze matrix </param>
        </member>
    </members>
</doc>
